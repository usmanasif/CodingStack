worker_processes  1;
error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    use epoll;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    access_log  /var/log/nginx/access.log;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     off;

    gzip on;
    gzip_http_version 1.0;
    gzip_proxied any;
    gzip_min_length 500;
    gzip_disable "MSIE [1-6]\.";
    gzip_types text/plain text/xml text/css
               text/comma-separated-values
               text/javascript application/x-javascript
               application/atom+xml;

    keepalive_timeout  5;

    upstream codingstack {
      server unix:/tmp/unicorn-codingstack.sock fail_timeout=0;

      # for TCP setups, point these to your backend servers
      # server 192.168.0.7:8080 fail_timeout=0;
      # server 192.168.0.8:8080 fail_timeout=0;
      # server 192.168.0.9:8080 fail_timeout=0;
    }

    server {
        listen 80;
        server_name SERVER_NAME; # FIXME

        client_max_body_size 4G;
        keepalive_timeout 5;

        root /path/to/codingstack/public; # FIXME

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;

            if ($request_uri ~* "\.(ico|css|js|gif|jpe?g|png)\?[0-9]+$") {
              expires max;
              break;
            }

            if (!-f $request_filename) {
              proxy_pass http://codingstack;
              break;
            }
        }
    }
}
