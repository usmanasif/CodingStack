
.group
  = f.label :login, t(:login, :scope => "activerecord.attributes.user"), :class => "label"
  = f.text_field :login, :class => "text_field"

.group
  = f.label :email, t(:email, :scope => "activerecord.attributes.user"), :class => "label"
  = f.text_field :email, :class => "text_field"

-if !@user.openid_login?
  -if !@user.new?
    .group
      = label_tag :current_password, t(:current_password, :scope => "activerecord.attributes.user"), :class => "label"
      = password_field :current_password, '', :class => 'text_field'

  .group
    = f.label :password, t(:password, :scope => "activerecord.attributes.user"), :class => "label"
    = f.password_field :password, :class => "text_field"

  .group
    = f.label :password_confirmation, t(:password_confirmation, :scope => "activerecord.attributes.user"), :class => "label"
    = f.password_field :password_confirmation, :class => "text_field"

.group
  = f.label :name, t(:name, :scope => "activerecord.attributes.user"), :class => "label"
  = f.text_field :name, :class => "text_field"

.group
  = f.label :birthday, t(:birthday, :scope => "activerecord.attributes.user"), :class => "label"
  = f.date_select :birthday, :start_year => 1920, :include_blank => true, :end_year => Time.now.year

.group
  = f.label :website, t(:website, :scope => "activerecord.attributes.user"), :class => "label"
  = f.text_field :website, :class => "text_field"

.group
  = f.label :bio, t(:bio, :scope => "activerecord.attributes.user", :default => "Bio"), :class => "label"
  = f.text_field :bio, :class => "text_field"

-if AppConfig.enable_i18n
  .group
    = f.label :language, t(:language, :scope => "activerecord.attributes.user"), :class => "label"
    = f.select :language, locales_options, {}, :class => "select"
-else
  = f.hidden_field :language, :value => (current_group.language || AppConfig.default_language)

.group
  = f.label :timezone, t(:timezone, :scope => "activerecord.attributes.user"), :class => "label"
  =time_zone_select( "user", "timezone", ActiveSupport::TimeZone.all, {:include_blank => true}, :class => "select")

.group
  = f.label :hide_country, t(:hide_country, :scope => "activerecord.attributes.user"), :class => "label"
  = f.check_box :hide_country, :class => "checkbox"

-if AppConfig.enable_i18n
  .group
    = f.label :preferred_languages, t(:preferred_languages, :scope => "activerecord.attributes.user"), :class => "label"
    -AVAILABLE_LANGUAGES.each do |lang|
      - (DEFAULT_USER_LANGUAGES.include? lang)? jsclass = '' : jsclass = 'jshide'
      .radio_option
        = check_box_tag "user[preferred_languages][]", lang, @user.preferred_languages.include?(lang), :class => "langbox checkbox #{jsclass}"
        %label.radio.langbox{:class=>jsclass}
          = language_desc(lang)
    = link_to t('.show_more_lang'), nil, :class => 'show-more-lang'
-else
  = hidden_field_tag "user[preferred_languages][]", (current_group.language || AppConfig.default_language)

-unless @user.new_record?
  %h2.title
    = t(".notifications")

  .group
    = f.check_box "notification_opts[new_answer]", :checked => @user.notification_opts.new_answer
    = t(".new_answer_notification")
  .group
    = f.check_box "notification_opts[give_advice]", :checked => @user.notification_opts.give_advice
    = t(".give_advice_notification")
  .group
    = f.check_box "notification_opts[activities]", :checked => @user.notification_opts.activities
    = t(".activities_notification")
  .group
    = f.check_box "notification_opts[reports]", :checked => @user.notification_opts.reports
    = t(".reports_notification")

