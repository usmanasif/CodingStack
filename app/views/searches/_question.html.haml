-klass = ""
-if logged_in? && question.tags.detect { |tag| current_user.preferred_tags_on(current_group).include?(tag) }
  - klass = "highlight"

.question{:class => klass}
  -if logged_in? && current_user.can_modify?(question)
    .right.buttons
      = link_to t('scaffold.edit'), edit_question_path(question), :class => "button"
      = link_to t('scaffold.destroy'), question_path(question), :confirm => t("scaffold.sure", :model => "question"), :method => :delete, :class => "button cancel"
  %span.left
    .box
      .item
        %span.counter
          &= question.votes_average
        %br
        = truncate(t(:votes, :scope => "activerecord.attributes.question"), :length => 6, :omission => ".")
      .item.count_answers.clear
        %span.counter
          &= question.answers_count
        %br
        = truncate(t(:answers, :scope => "activerecord.attributes.question"), :length => 6,:omission => ".")
      .clear
    .item.clear{:style => "height: 10px"}
      &= question.views_count
      = truncate(t(:views, :scope => "activerecord.attributes.question"), :length => 6,:omission => ".")
  %span.left{:style => "width: 90%"}
    .question_header
      .gravatar.item
        = gravatar(question.user.email.to_s, :size => 48)
      = link_to h(question.title), question_path(question), :title => truncate(question.body, :length => 200)
      .question_summary
        = truncate(question.body, :length => 150)

    .tag-list.left
      -question.tags.each do |tag|
        %span.tag{:class => "tag_#{h(tag)}"}
          = link_to h(tag), url_for(:controller => "questions", :action => "index", :tags => tag), :rel => "tag"
    .right
      = t(:asked_by, :scope => "activerecord.attributes.question")
      = link_to h(question.user.login), user_path(question.user)
      %b
        = t("time.ago", :time => time_ago_in_words(question.created_at))
  .clear
